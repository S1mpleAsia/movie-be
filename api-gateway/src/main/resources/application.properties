server.port=8080
spring.application.name=api-gateway

# Eureka Server
eureka.client.service-url.defaultZone = http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

# Config CORS routing
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*

# Logging route
logging.level.root = INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator = INFO
logging.level.org.springframework.cloud.gateway = TRACE

# Discovery Server Route
spring.cloud.gateway.routes[0].id = discovery-server
spring.cloud.gateway.routes[0].uri = http://localhost:8761
spring.cloud.gateway.routes[0].predicates[0] = Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0] = SetPath=/

# Discovery Server Static Resource Route
spring.cloud.gateway.routes[1].id = discovery-server-static
spring.cloud.gateway.routes[1].uri = http://localhost:8761
spring.cloud.gateway.routes[1].predicates[0] = Path=/eureka/**

# Auth Service Route
spring.cloud.gateway.routes[2].id = auth-service
spring.cloud.gateway.routes[2].uri = lb://auth-service
spring.cloud.gateway.routes[2].predicates[0] = Path=/api/auth/**

# Movie Service Route
spring.cloud.gateway.routes[3].id = movie-service
spring.cloud.gateway.routes[3].uri = lb://movie-service
spring.cloud.gateway.routes[3].predicates[0] = Path=/api/movie/**, /api/genre/**, /api/actor/**, \
                                                    /api/feedback/**
spring.cloud.gateway.routes[3].filters[0] = AuthenticationFilter

# Minio
app.minio.enabled=false

# Kafka
spring.kafka.bootstrap-servers = http://localhost:9092